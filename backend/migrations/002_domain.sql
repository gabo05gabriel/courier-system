BEGIN;
CREATE EXTENSION IF NOT EXISTS citext;

CREATE TABLE IF NOT EXISTS roles (
  rol_id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  nombre CITEXT NOT NULL UNIQUE
);

CREATE TABLE IF NOT EXISTS zonas (
  zona_id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  nombre CITEXT NOT NULL UNIQUE
);

CREATE TABLE IF NOT EXISTS rutas (
  ruta_id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  mensajero_id UUID NOT NULL REFERENCES users(id) ON DELETE RESTRICT,
  zona_id BIGINT NOT NULL REFERENCES zonas(zona_id) ON DELETE RESTRICT,
  fecha DATE NOT NULL DEFAULT CURRENT_DATE,
  duracion_estimada INTEGER,
  duracion_real INTEGER,
  latitud_inicio NUMERIC(9,6),
  longitud_inicio NUMERIC(9,6),
  latitud_fin NUMERIC(9,6),
  longitud_fin NUMERIC(9,6),
  CONSTRAINT rutas_mensajero_fecha_uk UNIQUE (mensajero_id, fecha)
);

CREATE TABLE IF NOT EXISTS envios (
  envio_id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  remitente_id UUID NOT NULL REFERENCES users(id) ON DELETE RESTRICT,
  origen_direccion TEXT NOT NULL,
  destino_direccion TEXT NOT NULL,
  destinatario_nombre VARCHAR(150) NOT NULL,
  destinatario_telefono VARCHAR(20) NOT NULL,
  peso NUMERIC(10,2) NOT NULL CHECK (peso > 0),
  tipo_servicio VARCHAR(15) NOT NULL CHECK (tipo_servicio IN ('Estándar','Express')),
  estado VARCHAR(15) NOT NULL DEFAULT 'Pendiente'
         CHECK (estado IN ('Pendiente','En Ruta','Entregado','Rechazado','Cancelado')),
  observaciones TEXT,
  creado_en TIMESTAMPTZ NOT NULL DEFAULT NOW(),
  ruta_id BIGINT REFERENCES rutas(ruta_id) ON DELETE SET NULL
);

CREATE TABLE IF NOT EXISTS entregas (
  entrega_id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  envio_id BIGINT NOT NULL REFERENCES envios(envio_id) ON DELETE CASCADE,
  mensajero_id UUID NOT NULL REFERENCES users(id) ON DELETE RESTRICT,
  fecha_entrega TIMESTAMPTZ NOT NULL DEFAULT NOW(),
  estado VARCHAR(15) NOT NULL CHECK (estado IN ('Entregado','Rechazado')),
  firma BYTEA,
  foto BYTEA
);

CREATE TABLE IF NOT EXISTS historial_envios (
  evento_id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  envio_id BIGINT NOT NULL REFERENCES envios(envio_id) ON DELETE CASCADE,
  tipo_evento VARCHAR(20) NOT NULL CHECK (tipo_evento IN ('Creado','Asignado','Recogido','Entregado','Incidente','Cancelado')),
  fecha_evento TIMESTAMPTZ NOT NULL DEFAULT NOW(),
  ubicacion_latitud NUMERIC(9,6),
  ubicacion_longitud NUMERIC(9,6)
);

CREATE TABLE IF NOT EXISTS incidentes (
  incidente_id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  envio_id BIGINT NOT NULL REFERENCES envios(envio_id) ON DELETE CASCADE,
  tipo VARCHAR(20) NOT NULL CHECK (tipo IN ('Retraso','Daño','Pérdida','Otro')),
  descripcion TEXT NOT NULL,
  fecha_reporte TIMESTAMPTZ NOT NULL DEFAULT NOW(),
  estado VARCHAR(15) NOT NULL DEFAULT 'Pendiente'
         CHECK (estado IN ('Pendiente','Resuelto'))
);

CREATE TABLE IF NOT EXISTS metodos_pago (
  metodo_id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  nombre CITEXT NOT NULL UNIQUE
);

CREATE TABLE IF NOT EXISTS pagos (
  pago_id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  envio_id BIGINT NOT NULL UNIQUE REFERENCES envios(envio_id) ON DELETE CASCADE,
  metodo_id BIGINT NOT NULL REFERENCES metodos_pago(metodo_id) ON DELETE RESTRICT,
  monto NUMERIC(10,2) NOT NULL CHECK (monto >= 0),
  estado VARCHAR(15) NOT NULL CHECK (estado IN ('Pendiente','Pagado')),
  fecha_pago TIMESTAMPTZ NOT NULL DEFAULT NOW()
);

CREATE TABLE IF NOT EXISTS ubicaciones_mensajeros (
  ubicacion_id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  mensajero_id UUID NOT NULL REFERENCES users(id) ON DELETE CASCADE,
  ruta_id BIGINT REFERENCES rutas(ruta_id) ON DELETE SET NULL,
  latitud NUMERIC(9,6) NOT NULL,
  longitud NUMERIC(9,6) NOT NULL,
  fecha_hora TIMESTAMPTZ NOT NULL DEFAULT NOW()
);

CREATE INDEX IF NOT EXISTS idx_envios_ruta_id ON envios(ruta_id);
CREATE INDEX IF NOT EXISTS idx_entregas_envio_id ON entregas(envio_id);
CREATE INDEX IF NOT EXISTS idx_historial_envios_envio_id ON historial_envios(envio_id);
CREATE INDEX IF NOT EXISTS idx_incidentes_envio_id ON incidentes(envio_id);
CREATE INDEX IF NOT EXISTS idx_ubic_mensajero_fecha ON ubicaciones_mensajeros(mensajero_id, fecha_hora DESC);

COMMIT;
